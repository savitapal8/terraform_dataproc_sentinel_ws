import "strings"

providers = {
	"google": {
		"alias": "",
		"config": {
			"access_token": {
				"references": [
					"var.access_token",
				],
			},
			"user_project_override": {
				"constant_value": true,
			},
		},
		"module_address":      "",
		"name":                "google",
		"provider_config_key": "google",
		"version_constraint":  "",
	},
	"google-beta": {
		"alias": "",
		"config": {
			"access_token": {
				"references": [
					"var.access_token",
				],
			},
			"user_project_override": {
				"constant_value": true,
			},
		},
		"module_address":      "",
		"name":                "google-beta",
		"provider_config_key": "google-beta",
		"version_constraint":  "",
	},
}

resources = {
	"google_dataproc_cluster.mycluster": {
		"address": "google_dataproc_cluster.mycluster",
		"config": {
			"cluster_config": [
				{
					"encryption_config": [
						{
							"kms_key_name": {
								"constant_value": "",
							},
						},
					],
					"endpoint_config": [
						{
							"enable_http_port_access": {
								"constant_value": false,
							},
						},
					],
					"gce_cluster_config": [
						{
							"internal_ip_only": {
								"constant_value": true,
							},
							"service_account": {
								"references": [
									"google_service_account.default.email",
									"google_service_account.default",
								],
							},
							"service_account_scopes": {
								"constant_value": [
									"cloud-platform",
								],
							},
							"tags": {
								"constant_value": [
									"foo",
									"bar",
								],
							},
						},
					],
					"initialization_action": [
						{
							"script": {
								"constant_value": "gs://dataproc-initialization-actions/stackdriver/stackdriver.sh",
							},
							"timeout_sec": {
								"constant_value": 500,
							},
						},
					],
					"master_config": [
						{
							"disk_config": [
								{
									"boot_disk_size_gb": {
										"constant_value": 30,
									},
									"boot_disk_type": {
										"constant_value": "pd-ssd",
									},
								},
							],
							"machine_type": {
								"constant_value": "e2-medium",
							},
							"num_instances": {
								"constant_value": 1,
							},
						},
					],
					"preemptible_worker_config": [
						{
							"num_instances": {
								"constant_value": 0,
							},
						},
					],
					"software_config": [
						{
							"image_version": {
								"constant_value": "1.3.7-deb9",
							},
							"override_properties": {
								"constant_value": {
									"dataproc:dataproc.allow.zero.workers": "true",
								},
							},
						},
					],
					"staging_bucket": {
						"constant_value": "dataproc-staging-bucket",
					},
					"worker_config": [
						{
							"disk_config": [
								{
									"boot_disk_size_gb": {
										"constant_value": 30,
									},
									"num_local_ssds": {
										"constant_value": 1,
									},
								},
							],
							"machine_type": {
								"constant_value": "e2-medium",
							},
							"min_cpu_platform": {
								"constant_value": "Intel Skylake",
							},
							"num_instances": {
								"constant_value": 2,
							},
						},
					],
				},
			],
			"graceful_decommission_timeout": {
				"constant_value": "120s",
			},
			"labels": {
				"constant_value": {
					"application_division": "pci",
					"application_name":     "",
					"application_role":     "auth",
					"au":                   "",
					"created":              "20211001",
					"environment":          "dev",
					"gcp_region":           "us-central1",
					"owner":                "wf",
				},
			},
			"name": {
				"constant_value": "mycluster",
			},
			"project": {
				"constant_value": "airline1-sabre-wolverine",
			},
			"region": {
				"constant_value": "us-central1",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "mycluster",
		"provider_config_key": "google-beta",
		"provisioners":        [],
		"type":                "google_dataproc_cluster",
	},
	"google_service_account.default": {
		"address": "google_service_account.default",
		"config": {
			"account_id": {
				"constant_value": "service-account-id",
			},
			"display_name": {
				"constant_value": "Service Account",
			},
			"project": {
				"constant_value": "airline1-sabre-wolverine",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "default",
		"provider_config_key": "google",
		"provisioners":        [],
		"type":                "google_service_account",
	},
}

provisioners = {}

variables = {
	"access_token": {
		"default":        null,
		"description":    "access_token",
		"module_address": "",
		"name":           "access_token",
	},
}

outputs = {}

module_calls = {}

strip_index = func(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
